stages:
  - prerun_setup
  - test
  - build
  - deploy


# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
 # - apt-get update
 # - apt-get install -y ffmpeg
  - python -V  # Print out python version for debugging
  - pip3 install virtualenv
  - virtualenv venv
  - source venv/bin/activate


configuring_python:
  stage: prerun_setup
  script:
    - echo "PreRun Setup"
    - source venv/bin/activate
    - pip3 install -r requirements.txt


Code_Runner:
  stage: test
  script:
    - source venv/bin/activate
    - ./bot.py

Docker_Image_Builder:
  stage: build
  image: registry.seedelmann.ch/kalabint/dockerx:latest
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > / kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG


deploy-prod:
  stage: deploy
  script:
    - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
